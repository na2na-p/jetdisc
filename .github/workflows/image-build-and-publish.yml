name: Publish Docker Image

on:
  workflow_call:
    inputs:
      JETDISC_VERSION:
        required: true
        type: string
      IMAGE_REPOSITORY:
        required: true
        type: string
      IMAGE_NAME:
        required: true
        type: string
      LATEST_TAG:
        required: true
        type: string
      RELEASE:
        type: boolean
        default: false
    secrets: {}

jobs:
  Build-and-Push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Prepare for build
        id: prepare-for-build
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Cache Docker Build Cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: docker-build-cache-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            docker-build-cache-${{ github.ref }}
            docker-build-cache-
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker Image
        run: |
          docker buildx bake \
              -f "infra/docker/image-bake.hcl" \
              --builder="${{ steps.buildx.outputs.name }}" \
              --set="app.tags=${{ inputs.IMAGE_REPOSITORY }}/${{ inputs.IMAGE_NAME }}:${{ inputs.JETDISC_VERSION }}" \
              --set="app.tags=${{ inputs.IMAGE_REPOSITORY }}/${{ inputs.IMAGE_NAME }}:${{ inputs.LATEST_TAG }}" \
              ${{ inputs.RELEASE && '--set="app.tags=${{ inputs.IMAGE_REPOSITORY }}/${{ inputs.IMAGE_NAME }}:release"' || '' }}
              --push
